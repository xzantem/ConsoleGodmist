<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ChooseDifficulty" xml:space="preserve">
    <value>Choose difficulty</value>
    <comment />
  </data>
  <data name="ChooseLanguage" xml:space="preserve">
    <value>Choose language</value>
    <comment />
  </data>
  <data name="DeleteSaveFile" xml:space="preserve">
    <value>Delete save file</value>
    <comment />
  </data>
  <data name="Easy" xml:space="preserve">
    <value>Easy</value>
    <comment />
  </data>
  <data name="English (Language)" xml:space="preserve">
    <value>English</value>
    <comment />
  </data>
  <data name="ExitGame" xml:space="preserve">
    <value>Exit game</value>
    <comment />
  </data>
  <data name="Hard" xml:space="preserve">
    <value>Hard</value>
    <comment />
  </data>
  <data name="LoadGame" xml:space="preserve">
    <value>Load game</value>
    <comment />
  </data>
  <data name="NewGame" xml:space="preserve">
    <value>New game</value>
    <comment />
  </data>
  <data name="Nightmare" xml:space="preserve">
    <value>Nightmare</value>
    <comment />
  </data>
  <data name="Normal" xml:space="preserve">
    <value>Normal</value>
    <comment />
  </data>
  <data name="Polish (Language)" xml:space="preserve">
    <value>Polish</value>
    <comment />
  </data>
  <data name="Opening_1" xml:space="preserve">
    <value>You are on your way to the town of Arungard. Supposedly for twenty years no inhabitant of this city has experienced any daylight.</value>
    <comment />
  </data>
  <data name="Opening_2" xml:space="preserve">
    <value>You've heard legends of the so-called Ghorn who uttered a spell and darkness enveloped the town.</value>
    <comment />
  </data>
  <data name="Opening_3" xml:space="preserve">
    <value>This is all that you know though.</value>
    <comment />
  </data>
  <data name="Opening_4" xml:space="preserve">
    <value>You reach the town. Its aged elfish walls and towers immediately had you impressed.</value>
    <comment />
  </data>
  <data name="Opening_5" xml:space="preserve">
    <value>You walk up to the guard near the gate.</value>
    <comment />
  </data>
  <data name="TownGuard_Name" xml:space="preserve">
    <value>Arungard Town Guard</value>
    <comment />
  </data>
  <data name="TownGuard_Line" xml:space="preserve">
    <value>Who are you, and what is your business in this town?</value>
    <comment />
  </data>
  <data name="Iam" xml:space="preserve">
    <value>I am a</value>
    <comment />
  </data>
  <data name="WarriorLocative" xml:space="preserve">
    <value>warrior</value>
    <comment />
  </data>
  <data name="ScoutLocative" xml:space="preserve">
    <value>scout</value>
    <comment />
  </data>
  <data name="SorcererLocative" xml:space="preserve">
    <value>sorcerer</value>
    <comment />
  </data>
  <data name="PaladinLocative" xml:space="preserve">
    <value>paladin</value>
    <comment />
  </data>
  <data name="MyNameIs" xml:space="preserve">
    <value>My name is</value>
    <comment />
  </data>
  <data name="WarriorNominativeC" xml:space="preserve">
    <value>Warrior</value>
    <comment />
  </data>
  <data name="ScoutNominativeC" xml:space="preserve">
    <value>Scout</value>
    <comment />
  </data>
  <data name="SorcererNominativeC" xml:space="preserve">
    <value>Sorcerer</value>
    <comment />
  </data>
  <data name="PaladinNominativeC" xml:space="preserve">
    <value>Paladin</value>
    <comment />
  </data>
  <data name="StartExpedition" xml:space="preserve">
    <value>Start expedition</value>
    <comment />
  </data>
  <data name="Blacksmith" xml:space="preserve">
    <value>Blacksmith</value>
    <comment />
  </data>
  <data name="Alchemist" xml:space="preserve">
    <value>Alchemist</value>
    <comment />
  </data>
  <data name="Enchanter" xml:space="preserve">
    <value>Enchanter</value>
    <comment />
  </data>
  <data name="Druid" xml:space="preserve">
    <value>Druid</value>
    <comment />
  </data>
  <data name="QuestLog" xml:space="preserve">
    <value>Quest log</value>
    <comment />
  </data>
  <data name="OpenInventory" xml:space="preserve">
    <value>Open inventory</value>
    <comment />
  </data>
  <data name="SaveGame" xml:space="preserve">
    <value>Save game</value>
    <comment />
  </data>
  <data name="Nameless" xml:space="preserve">
    <value>Nameless</value>
  </data>
  <data name="Catacombs" xml:space="preserve">
    <value>Catacombs</value>
  </data>
  <data name="Forest" xml:space="preserve">
    <value>Forest</value>
  </data>
  <data name="ElvishRuins" xml:space="preserve">
    <value>Elvish Ruins</value>
  </data>
  <data name="Cove" xml:space="preserve">
    <value>Cove</value>
  </data>
  <data name="Desert" xml:space="preserve">
    <value>Desert</value>
  </data>
  <data name="Temple" xml:space="preserve">
    <value>Temple</value>
  </data>
  <data name="Mountains" xml:space="preserve">
    <value>Mountains</value>
  </data>
  <data name="Swamp" xml:space="preserve">
    <value>Swamp</value>
  </data>
  <data name="SelectDestination" xml:space="preserve">
    <value>Select expedition destination:</value>
  </data>
  <data name="GoForward" xml:space="preserve">
    <value>Go forward</value>
  </data>
  <data name="GoBack" xml:space="preserve">
    <value>Go back</value>
  </data>
  <data name="ShowCharacter" xml:space="preserve">
    <value>Show character</value>
  </data>
  <data name="GoUp" xml:space="preserve">
    <value>Go up</value>
  </data>
  <data name="GoDown" xml:space="preserve">
    <value>Go down</value>
  </data>
  <data name="RestAtCampfire" xml:space="preserve">
    <value>Rest at campfire</value>
  </data>
  <data name="CollectPlant" xml:space="preserve">
    <value>Collect plant</value>
  </data>
  <data name="OpenStash" xml:space="preserve">
    <value>Loot stash</value>
  </data>
  <data name="ExitDungeon" xml:space="preserve">
    <value>Exit dungeon</value>
  </data>
  <data name="Level" xml:space="preserve">
    <value>Level</value>
  </data>
  <data name="Floor" xml:space="preserve">
    <value>Floor</value>
  </data>
  <data name="Map" xml:space="preserve">
    <value>Map</value>
  </data>
  <data name="DisarmTrap" xml:space="preserve">
    <value>Disarm trap</value>
  </data>
  <data name="LocationScouted" xml:space="preserve">
    <value>You were able to find a map of the current floor!</value>
  </data>
</root>